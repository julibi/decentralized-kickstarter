{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { Form, Button, Input, Message } from \"semantic-ui-react\";\nimport factory from \"../ethereum/factory\";\nimport web3 from \"../ethereum/web3\";\n\nvar ContributeForm = /*#__PURE__*/function (_Component) {\n  _inherits(ContributeForm, _Component);\n\n  var _super = _createSuper(ContributeForm);\n\n  function ContributeForm() {\n    var _this;\n\n    _classCallCheck(this, ContributeForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      value: \"\"\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSubmit\", function (event) {\n      event.preventDefault();\n    });\n\n    return _this;\n  }\n\n  _createClass(ContributeForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/_jsx(Form, {\n        onSubmit: this.onSubmit,\n        children: /*#__PURE__*/_jsxs(Form.Field, {\n          children: [/*#__PURE__*/_jsx(\"label\", {\n            children: \"Amount to Contribute\"\n          }), /*#__PURE__*/_jsx(Input, {\n            label: \"ether\",\n            labelPosition: \"right\",\n            value: this.state.value,\n            onChange: function onChange(event) {\n              return _this2.setState({\n                value: event.target.value\n              });\n            }\n          }), /*#__PURE__*/_jsx(Button, {\n            primary: true,\n            style: {\n              marginTop: \"10px\"\n            },\n            children: \"Contribute\"\n          })]\n        })\n      });\n    }\n  }]);\n\n  return ContributeForm;\n}(Component);\n\nexport default ContributeForm;","map":{"version":3,"sources":["/Users/hyun-kyungyi/JULI/decentralized-kickstarter/components/ContributeForm.js"],"names":["React","Component","Form","Button","Input","Message","factory","web3","ContributeForm","value","event","preventDefault","onSubmit","state","setState","target","marginTop"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,KAAvB,EAA8BC,OAA9B,QAA6C,mBAA7C;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;;IAEMC,c;;;;;;;;;;;;;;;;4DACI;AACNC,MAAAA,KAAK,EAAE;AADD,K;;+DAIG,UAACC,KAAD,EAAW;AACpBA,MAAAA,KAAK,CAACC,cAAN;AACD,K;;;;;;;6BAEQ;AAAA;;AACP,0BACE,KAAC,IAAD;AAAM,QAAA,QAAQ,EAAE,KAAKC,QAArB;AAAA,+BACE,MAAC,IAAD,CAAM,KAAN;AAAA,kCACE;AAAA;AAAA,YADF,eAEE,KAAC,KAAD;AACE,YAAA,KAAK,EAAC,OADR;AAEE,YAAA,aAAa,EAAC,OAFhB;AAGE,YAAA,KAAK,EAAE,KAAKC,KAAL,CAAWJ,KAHpB;AAIE,YAAA,QAAQ,EAAE,kBAACC,KAAD;AAAA,qBAAW,MAAI,CAACI,QAAL,CAAc;AAAEL,gBAAAA,KAAK,EAAEC,KAAK,CAACK,MAAN,CAAaN;AAAtB,eAAd,CAAX;AAAA;AAJZ,YAFF,eAQE,KAAC,MAAD;AAAQ,YAAA,OAAO,MAAf;AAAgB,YAAA,KAAK,EAAE;AAAEO,cAAAA,SAAS,EAAE;AAAb,aAAvB;AAAA;AAAA,YARF;AAAA;AADF,QADF;AAgBD;;;;EA1B0Bf,S;;AA6B7B,eAAeO,cAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Form, Button, Input, Message } from \"semantic-ui-react\";\nimport factory from \"../ethereum/factory\";\nimport web3 from \"../ethereum/web3\";\n\nclass ContributeForm extends Component {\n  state = {\n    value: \"\",\n  };\n\n  onSubmit = (event) => {\n    event.preventDefault();\n  };\n\n  render() {\n    return (\n      <Form onSubmit={this.onSubmit}>\n        <Form.Field>\n          <label>Amount to Contribute</label>\n          <Input\n            label=\"ether\"\n            labelPosition=\"right\"\n            value={this.state.value}\n            onChange={(event) => this.setState({ value: event.target.value })}\n          />\n          <Button primary style={{ marginTop: \"10px\" }}>\n            Contribute\n          </Button>\n        </Form.Field>\n      </Form>\n    );\n  }\n}\n\nexport default ContributeForm;\n"]},"metadata":{},"sourceType":"module"}