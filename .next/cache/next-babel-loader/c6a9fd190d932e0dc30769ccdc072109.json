{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport { Form, Button, Input, Message } from \"semantic-ui-react\";\nimport Layout from \"../../components/Layout\";\nimport factory from \"../../ethereum/factory\";\nimport web3 from \"../../ethereum/web3\";\nimport { Router } from '../../routes';\n\nclass CampaignNew extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      minimContribution: \"\",\n      errorMessage: \"\",\n      loading: false\n    });\n\n    _defineProperty(this, \"onSubmit\", async event => {\n      event.preventDefault();\n      this.setState({\n        loading: true,\n        errorMessage: \"\"\n      });\n\n      try {\n        const accounts = await web3.eth.getAccounts(); // we don't have to specify gas fee, because metamask calculates it automatically for us\n        // we only have to specify it when we are running tests\n\n        await factory.methods.createCampaign(this.state.minimContribution).send({\n          from: accounts[0]\n        });\n        Router.pushRoute('/');\n      } catch (err) {\n        this.setState({\n          errorMessage: err.message\n        });\n      }\n\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxs(Layout, {\n      children: [/*#__PURE__*/_jsx(\"h1\", {\n        children: \"Create a New Campaign\"\n      }), /*#__PURE__*/_jsxs(Form, {\n        onSubmit: this.onSubmit,\n        error: !!this.state.errorMessage,\n        children: [/*#__PURE__*/_jsxs(Form.Field, {\n          children: [/*#__PURE__*/_jsx(\"label\", {\n            children: \"Minimum Contribution\"\n          }), /*#__PURE__*/_jsx(Input, {\n            label: \"wei\",\n            labelPosition: \"right\",\n            value: this.state.minimContribution,\n            onChange: event => this.setState({\n              minimContribution: event.target.value\n            })\n          })]\n        }), /*#__PURE__*/_jsx(Message, {\n          error: true,\n          header: \"Oops!\",\n          content: this.state.errorMessage\n        }), /*#__PURE__*/_jsx(Button, {\n          loading: this.state.loading,\n          primary: true,\n          children: \"Create\"\n        })]\n      })]\n    });\n  }\n\n}\n\nexport default CampaignNew;","map":{"version":3,"sources":["/Users/hyun-kyungyi/JULI/decentralized-kickstarter/pages/campaigns/new.js"],"names":["React","Component","Form","Button","Input","Message","Layout","factory","web3","Router","CampaignNew","minimContribution","errorMessage","loading","event","preventDefault","setState","accounts","eth","getAccounts","methods","createCampaign","state","send","from","pushRoute","err","message","render","onSubmit","target","value"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,KAAvB,EAA8BC,OAA9B,QAA6C,mBAA7C;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,IAAP,MAAiB,qBAAjB;AACA,SAASC,MAAT,QAAuB,cAAvB;;AAEA,MAAMC,WAAN,SAA0BT,SAA1B,CAAoC;AAAA;AAAA;;AAAA,mCAC1B;AACNU,MAAAA,iBAAiB,EAAE,EADb;AAENC,MAAAA,YAAY,EAAE,EAFR;AAGNC,MAAAA,OAAO,EAAE;AAHH,KAD0B;;AAAA,sCAOvB,MAAOC,KAAP,IAAiB;AAC1BA,MAAAA,KAAK,CAACC,cAAN;AACA,WAAKC,QAAL,CAAc;AAAEH,QAAAA,OAAO,EAAE,IAAX;AAAiBD,QAAAA,YAAY,EAAE;AAA/B,OAAd;;AAEA,UAAI;AACF,cAAMK,QAAQ,GAAG,MAAMT,IAAI,CAACU,GAAL,CAASC,WAAT,EAAvB,CADE,CAEF;AACA;;AACA,cAAMZ,OAAO,CAACa,OAAR,CACHC,cADG,CACY,KAAKC,KAAL,CAAWX,iBADvB,EAEHY,IAFG,CAEE;AAAEC,UAAAA,IAAI,EAAEP,QAAQ,CAAC,CAAD;AAAhB,SAFF,CAAN;AAIAR,QAAAA,MAAM,CAACgB,SAAP,CAAiB,GAAjB;AACD,OATD,CASE,OAAMC,GAAN,EAAW;AACX,aAAKV,QAAL,CAAc;AAAEJ,UAAAA,YAAY,EAAEc,GAAG,CAACC;AAApB,SAAd;AACD;;AACD,WAAKX,QAAL,CAAc;AAAEH,QAAAA,OAAO,EAAE;AAAX,OAAd;AACD,KAxBiC;AAAA;;AA0BlCe,EAAAA,MAAM,GAAG;AACP,wBACE,MAAC,MAAD;AAAA,8BACE;AAAA;AAAA,QADF,eAEE,MAAC,IAAD;AAAM,QAAA,QAAQ,EAAE,KAAKC,QAArB;AAA+B,QAAA,KAAK,EAAE,CAAC,CAAC,KAAKP,KAAL,CAAWV,YAAnD;AAAA,gCACE,MAAC,IAAD,CAAM,KAAN;AAAA,kCACE;AAAA;AAAA,YADF,eAEE,KAAC,KAAD;AACE,YAAA,KAAK,EAAC,KADR;AAEE,YAAA,aAAa,EAAC,OAFhB;AAGE,YAAA,KAAK,EAAE,KAAKU,KAAL,CAAWX,iBAHpB;AAIE,YAAA,QAAQ,EAAGG,KAAD,IACR,KAAKE,QAAL,CAAc;AAAEL,cAAAA,iBAAiB,EAAEG,KAAK,CAACgB,MAAN,CAAaC;AAAlC,aAAd;AALJ,YAFF;AAAA,UADF,eAYE,KAAC,OAAD;AAAS,UAAA,KAAK,MAAd;AAAe,UAAA,MAAM,EAAC,OAAtB;AAA8B,UAAA,OAAO,EAAE,KAAKT,KAAL,CAAWV;AAAlD,UAZF,eAaE,KAAC,MAAD;AAAQ,UAAA,OAAO,EAAE,KAAKU,KAAL,CAAWT,OAA5B;AAAqC,UAAA,OAAO,MAA5C;AAAA;AAAA,UAbF;AAAA,QAFF;AAAA,MADF;AAoBD;;AA/CiC;;AAkDpC,eAAeH,WAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Form, Button, Input, Message } from \"semantic-ui-react\";\nimport Layout from \"../../components/Layout\";\nimport factory from \"../../ethereum/factory\";\nimport web3 from \"../../ethereum/web3\";\nimport { Router } from '../../routes';\n\nclass CampaignNew extends Component {\n  state = {\n    minimContribution: \"\",\n    errorMessage: \"\",\n    loading: false\n  };\n\n  onSubmit = async (event) => {\n    event.preventDefault();\n    this.setState({ loading: true, errorMessage: \"\" });\n\n    try {\n      const accounts = await web3.eth.getAccounts();\n      // we don't have to specify gas fee, because metamask calculates it automatically for us\n      // we only have to specify it when we are running tests\n      await factory.methods\n        .createCampaign(this.state.minimContribution)\n        .send({ from: accounts[0] });\n        \n      Router.pushRoute('/');\n    } catch(err) {\n      this.setState({ errorMessage: err.message });\n    }\n    this.setState({ loading: false });\n  };\n\n  render() {\n    return (\n      <Layout>\n        <h1>Create a New Campaign</h1>\n        <Form onSubmit={this.onSubmit} error={!!this.state.errorMessage}>\n          <Form.Field>\n            <label>Minimum Contribution</label>\n            <Input\n              label=\"wei\"\n              labelPosition=\"right\"\n              value={this.state.minimContribution}\n              onChange={(event) =>\n                this.setState({ minimContribution: event.target.value })\n              }\n            />\n          </Form.Field>\n          <Message error header=\"Oops!\" content={this.state.errorMessage}/>\n          <Button loading={this.state.loading} primary>Create</Button>\n        </Form>\n      </Layout>\n    );\n  }\n}\n\nexport default CampaignNew;\n"]},"metadata":{},"sourceType":"module"}