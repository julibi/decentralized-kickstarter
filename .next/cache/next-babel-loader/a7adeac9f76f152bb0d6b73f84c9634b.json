{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/hyun-kyungyi/JULI/decentralized-kickstarter/pages/index.js\";\nimport React, { Component } from \"react\";\nimport { Card, Button } from \"semantic-ui-react\";\nimport factory from \"../ethereum/factory\";\nimport Layout from \"../components/Layout\";\n\nclass CampaignIndex extends Component {\n  // if we wanna do initial data loading with next.js on the serverside\n  // we have to do so with next.js specific funtion getInitialProps\n  // why static? next wants to return data without rendering our component\n  static async getInitialProps() {\n    const campaigns = await factory.methods.getDeployedCampaigns().call();\n    return {\n      campaigns\n    };\n  }\n\n  renderCampaigns() {\n    const items = this.props.campaigns.map(address => {\n      return {\n        header: address,\n        description: /*#__PURE__*/_jsxDEV(\"a\", {\n          children: \"View Campaign\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 22\n        }, this),\n        fluid: true\n      };\n    });\n    return /*#__PURE__*/_jsxDEV(Card.Group, {\n      items: items\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 12\n    }, this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Open Campaigns\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        floated: \"right\",\n        content: \"Create Campaign\",\n        icon: \"add circle\",\n        primary: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), this.renderCampaigns()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default CampaignIndex;","map":{"version":3,"sources":["/Users/hyun-kyungyi/JULI/decentralized-kickstarter/pages/index.js"],"names":["React","Component","Card","Button","factory","Layout","CampaignIndex","getInitialProps","campaigns","methods","getDeployedCampaigns","call","renderCampaigns","items","props","map","address","header","description","fluid","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,mBAA7B;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAEA,MAAMC,aAAN,SAA4BL,SAA5B,CAAsC;AACpC;AACA;AACA;AACA,eAAaM,eAAb,GAA+B;AAC7B,UAAMC,SAAS,GAAG,MAAMJ,OAAO,CAACK,OAAR,CAAgBC,oBAAhB,GAAuCC,IAAvC,EAAxB;AACA,WAAO;AAAEH,MAAAA;AAAF,KAAP;AACD;;AAEDI,EAAAA,eAAe,GAAG;AAChB,UAAMC,KAAK,GAAG,KAAKC,KAAL,CAAWN,SAAX,CAAqBO,GAArB,CAA0BC,OAAD,IAAa;AAClD,aAAO;AACLC,QAAAA,MAAM,EAAED,OADH;AAELE,QAAAA,WAAW,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFR;AAGLC,QAAAA,KAAK,EAAE;AAHF,OAAP;AAKD,KANa,CAAd;AAQA,wBAAO,QAAC,IAAD,CAAM,KAAN;AAAY,MAAA,KAAK,EAAEN;AAAnB;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAEDO,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,MAAD;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD;AACE,QAAA,OAAO,EAAC,OADV;AAEE,QAAA,OAAO,EAAC,iBAFV;AAGE,QAAA,IAAI,EAAC,YAHP;AAIE,QAAA,OAAO;AAJT;AAAA;AAAA;AAAA;AAAA,cAFF,EAQG,KAAKR,eAAL,EARH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAYD;;AAlCmC;;AAqCtC,eAAeN,aAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Card, Button } from \"semantic-ui-react\";\nimport factory from \"../ethereum/factory\";\nimport Layout from \"../components/Layout\";\n\nclass CampaignIndex extends Component {\n  // if we wanna do initial data loading with next.js on the serverside\n  // we have to do so with next.js specific funtion getInitialProps\n  // why static? next wants to return data without rendering our component\n  static async getInitialProps() {\n    const campaigns = await factory.methods.getDeployedCampaigns().call();\n    return { campaigns };\n  }\n\n  renderCampaigns() {\n    const items = this.props.campaigns.map((address) => {\n      return {\n        header: address,\n        description: <a>View Campaign</a>,\n        fluid: true,\n      };\n    });\n\n    return <Card.Group items={items} />;\n  }\n\n  render() {\n    return (\n      <Layout>\n        <h3>Open Campaigns</h3>\n        <Button\n          floated=\"right\"\n          content=\"Create Campaign\"\n          icon=\"add circle\"\n          primary\n        />\n        {this.renderCampaigns()}\n      </Layout>\n    );\n  }\n}\n\nexport default CampaignIndex;\n"]},"metadata":{},"sourceType":"module"}