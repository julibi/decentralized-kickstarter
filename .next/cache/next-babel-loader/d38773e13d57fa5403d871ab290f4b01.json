{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { Form, Button, Input, Message } from \"semantic-ui-react\";\nimport Layout from \"../../components/Layout\";\nimport factory from \"../../ethereum/factory\";\nimport web3 from \"../../ethereum/web3\";\n\nvar CampaignNew = /*#__PURE__*/function (_Component) {\n  _inherits(CampaignNew, _Component);\n\n  var _super = _createSuper(CampaignNew);\n\n  function CampaignNew() {\n    var _this;\n\n    _classCallCheck(this, CampaignNew);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      minimContribution: \"\",\n      errorMessage: \"\",\n      loading: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSubmit\", /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n        var accounts;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                event.preventDefault();\n\n                _this.setState({\n                  loading: true,\n                  errorMessage: \"\"\n                });\n\n                _context.prev = 2;\n                _context.next = 5;\n                return web3.eth.getAccounts();\n\n              case 5:\n                accounts = _context.sent;\n                _context.next = 8;\n                return factory.methods.createCampaign(_this.state.minimContribution).send({\n                  from: accounts[0]\n                });\n\n              case 8:\n                _context.next = 13;\n                break;\n\n              case 10:\n                _context.prev = 10;\n                _context.t0 = _context[\"catch\"](2);\n\n                _this.setState({\n                  errorMessage: _context.t0.message\n                });\n\n              case 13:\n                _this.setState({\n                  loading: false\n                });\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[2, 10]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n\n    return _this;\n  }\n\n  _createClass(CampaignNew, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/_jsxs(Layout, {\n        children: [/*#__PURE__*/_jsx(\"h1\", {\n          children: \"Create a New Campaign\"\n        }), /*#__PURE__*/_jsxs(Form, {\n          onSubmit: this.onSubmit,\n          error: !!this.state.errorMessage,\n          children: [/*#__PURE__*/_jsxs(Form.Field, {\n            children: [/*#__PURE__*/_jsx(\"label\", {\n              children: \"Minimum Contribution\"\n            }), /*#__PURE__*/_jsx(Input, {\n              label: \"wei\",\n              labelPosition: \"right\",\n              value: this.state.minimContribution,\n              onChange: function onChange(event) {\n                return _this2.setState({\n                  minimContribution: event.target.value\n                });\n              }\n            })]\n          }), /*#__PURE__*/_jsx(Message, {\n            error: true,\n            header: \"Oops!\",\n            content: this.state.errorMessage\n          }), /*#__PURE__*/_jsx(Button, {\n            loading: this.state.loading,\n            primary: true,\n            children: \"Create\"\n          })]\n        })]\n      });\n    }\n  }]);\n\n  return CampaignNew;\n}(Component);\n\nexport default CampaignNew;","map":{"version":3,"sources":["/Users/hyun-kyungyi/JULI/decentralized-kickstarter/pages/campaigns/new.js"],"names":["React","Component","Form","Button","Input","Message","Layout","factory","web3","CampaignNew","minimContribution","errorMessage","loading","event","preventDefault","setState","eth","getAccounts","accounts","methods","createCampaign","state","send","from","message","onSubmit","target","value"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,KAAvB,EAA8BC,OAA9B,QAA6C,mBAA7C;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,IAAP,MAAiB,qBAAjB;;IAEMC,W;;;;;;;;;;;;;;;;4DACI;AACNC,MAAAA,iBAAiB,EAAE,EADb;AAENC,MAAAA,YAAY,EAAE,EAFR;AAGNC,MAAAA,OAAO,EAAE;AAHH,K;;;0EAMG,iBAAOC,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACTA,gBAAAA,KAAK,CAACC,cAAN;;AACA,sBAAKC,QAAL,CAAc;AAAEH,kBAAAA,OAAO,EAAE,IAAX;AAAiBD,kBAAAA,YAAY,EAAE;AAA/B,iBAAd;;AAFS;AAAA;AAAA,uBAKgBH,IAAI,CAACQ,GAAL,CAASC,WAAT,EALhB;;AAAA;AAKDC,gBAAAA,QALC;AAAA;AAAA,uBAQDX,OAAO,CAACY,OAAR,CACHC,cADG,CACY,MAAKC,KAAL,CAAWX,iBADvB,EAEHY,IAFG,CAEE;AAAEC,kBAAAA,IAAI,EAAEL,QAAQ,CAAC,CAAD;AAAhB,iBAFF,CARC;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAYP,sBAAKH,QAAL,CAAc;AAAEJ,kBAAAA,YAAY,EAAE,YAAIa;AAApB,iBAAd;;AAZO;AAcT,sBAAKT,QAAL,CAAc;AAAEH,kBAAAA,OAAO,EAAE;AAAX,iBAAd;;AAdS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;;6BAiBF;AAAA;;AACP,0BACE,MAAC,MAAD;AAAA,gCACE;AAAA;AAAA,UADF,eAEE,MAAC,IAAD;AAAM,UAAA,QAAQ,EAAE,KAAKa,QAArB;AAA+B,UAAA,KAAK,EAAE,CAAC,CAAC,KAAKJ,KAAL,CAAWV,YAAnD;AAAA,kCACE,MAAC,IAAD,CAAM,KAAN;AAAA,oCACE;AAAA;AAAA,cADF,eAEE,KAAC,KAAD;AACE,cAAA,KAAK,EAAC,KADR;AAEE,cAAA,aAAa,EAAC,OAFhB;AAGE,cAAA,KAAK,EAAE,KAAKU,KAAL,CAAWX,iBAHpB;AAIE,cAAA,QAAQ,EAAE,kBAACG,KAAD;AAAA,uBACR,MAAI,CAACE,QAAL,CAAc;AAAEL,kBAAAA,iBAAiB,EAAEG,KAAK,CAACa,MAAN,CAAaC;AAAlC,iBAAd,CADQ;AAAA;AAJZ,cAFF;AAAA,YADF,eAYE,KAAC,OAAD;AAAS,YAAA,KAAK,MAAd;AAAe,YAAA,MAAM,EAAC,OAAtB;AAA8B,YAAA,OAAO,EAAE,KAAKN,KAAL,CAAWV;AAAlD,YAZF,eAaE,KAAC,MAAD;AAAQ,YAAA,OAAO,EAAE,KAAKU,KAAL,CAAWT,OAA5B;AAAqC,YAAA,OAAO,MAA5C;AAAA;AAAA,YAbF;AAAA,UAFF;AAAA,QADF;AAoBD;;;;EA7CuBX,S;;AAgD1B,eAAeQ,WAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Form, Button, Input, Message } from \"semantic-ui-react\";\nimport Layout from \"../../components/Layout\";\nimport factory from \"../../ethereum/factory\";\nimport web3 from \"../../ethereum/web3\";\n\nclass CampaignNew extends Component {\n  state = {\n    minimContribution: \"\",\n    errorMessage: \"\",\n    loading: false\n  };\n\n  onSubmit = async (event) => {\n    event.preventDefault();\n    this.setState({ loading: true, errorMessage: \"\" });\n\n    try {\n      const accounts = await web3.eth.getAccounts();\n      // we don't have to specify gas fee, because metamask calculates it automatically for us\n      // we only have to specify it when we are running tests\n      await factory.methods\n        .createCampaign(this.state.minimContribution)\n        .send({ from: accounts[0] });\n    } catch(err) {\n      this.setState({ errorMessage: err.message });\n    }\n    this.setState({ loading: false });\n  };\n\n  render() {\n    return (\n      <Layout>\n        <h1>Create a New Campaign</h1>\n        <Form onSubmit={this.onSubmit} error={!!this.state.errorMessage}>\n          <Form.Field>\n            <label>Minimum Contribution</label>\n            <Input\n              label=\"wei\"\n              labelPosition=\"right\"\n              value={this.state.minimContribution}\n              onChange={(event) =>\n                this.setState({ minimContribution: event.target.value })\n              }\n            />\n          </Form.Field>\n          <Message error header=\"Oops!\" content={this.state.errorMessage}/>\n          <Button loading={this.state.loading} primary>Create</Button>\n        </Form>\n      </Layout>\n    );\n  }\n}\n\nexport default CampaignNew;\n"]},"metadata":{},"sourceType":"module"}