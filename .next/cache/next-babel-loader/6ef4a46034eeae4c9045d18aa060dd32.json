{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/hyun-kyungyi/JULI/decentralized-kickstarter/pages/index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { Card } from \"semantic-ui-react\";\nimport factory from \"../ethereum/factory\";\n\nvar CampaignIndex = /*#__PURE__*/function (_Component) {\n  _inherits(CampaignIndex, _Component);\n\n  var _super = _createSuper(CampaignIndex);\n\n  function CampaignIndex() {\n    _classCallCheck(this, CampaignIndex);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(CampaignIndex, [{\n    key: \"renderCampaigns\",\n    value: function renderCampaigns() {\n      var _this = this;\n\n      var items = this.props.campaigns.map(function (address) {\n        return {\n          header: address,\n          description: /*#__PURE__*/_jsxDEV(\"a\", {\n            children: \"View Campaign\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 22\n          }, _this),\n          fluid: true\n        };\n      });\n      return /*#__PURE__*/_jsxDEV(Card.Group, {\n        items: items\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 12\n      }, this);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"link\", {\n          async: true,\n          rel: \"stylesheet\",\n          href: \"//cdn.jsdelivr.net/npm/semantic-ui@^2.4.1/dist/semantic.min.css\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }, this), this.renderCampaigns()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }, this);\n    }\n  }], [{\n    key: \"getInitialProps\",\n    // if we wanna do initial data loading with next.js on the serverside\n    // we have to do so with next.js specific funtion getInitialProps\n    // why static? next wants to return data without rendering our component\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var campaigns;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return factory.methods.getDeployedCampaigns().call();\n\n              case 2:\n                campaigns = _context.sent;\n                return _context.abrupt(\"return\", {\n                  campaigns: campaigns\n                });\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps() {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return CampaignIndex;\n}(Component);\n\nexport default CampaignIndex;","map":{"version":3,"sources":["/Users/hyun-kyungyi/JULI/decentralized-kickstarter/pages/index.js"],"names":["React","Component","Card","factory","CampaignIndex","items","props","campaigns","map","address","header","description","fluid","renderCampaigns","methods","getDeployedCampaigns","call"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,OAAOC,OAAP,MAAoB,qBAApB;;IAEMC,a;;;;;;;;;;;;;sCASc;AAAA;;AAChB,UAAMC,KAAK,GAAG,KAAKC,KAAL,CAAWC,SAAX,CAAqBC,GAArB,CAAyB,UAACC,OAAD,EAAa;AAClD,eAAO;AACLC,UAAAA,MAAM,EAAED,OADH;AAELE,UAAAA,WAAW,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFR;AAGLC,UAAAA,KAAK,EAAE;AAHF,SAAP;AAKD,OANa,CAAd;AAQA,0BAAO,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,KAAK,EAAEP;AAAnB;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;;;6BAEQ;AACP,0BACE;AAAA,gCACE;AACE,UAAA,KAAK,MADP;AAEE,UAAA,GAAG,EAAC,YAFN;AAGE,UAAA,IAAI,EAAC;AAHP;AAAA;AAAA;AAAA;AAAA,gBADF,EAMG,KAAKQ,eAAL,EANH;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAUD;;;AA/BD;AACA;AACA;;;;;;;;;uBAE0BV,OAAO,CAACW,OAAR,CAAgBC,oBAAhB,GAAuCC,IAAvC,E;;;AAAlBT,gBAAAA,S;iDACC;AAAEA,kBAAAA,SAAS,EAATA;AAAF,iB;;;;;;;;;;;;;;;;;;;EANiBN,S;;AAmC5B,eAAeG,aAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Card } from \"semantic-ui-react\";\nimport factory from \"../ethereum/factory\";\n\nclass CampaignIndex extends Component {\n  // if we wanna do initial data loading with next.js on the serverside\n  // we have to do so with next.js specific funtion getInitialProps\n  // why static? next wants to return data without rendering our component\n  static async getInitialProps() {\n    const campaigns = await factory.methods.getDeployedCampaigns().call();\n    return { campaigns };\n  }\n\n  renderCampaigns() {\n    const items = this.props.campaigns.map((address) => {\n      return {\n        header: address,\n        description: <a>View Campaign</a>,\n        fluid: true,\n      };\n    });\n\n    return <Card.Group items={items} />;\n  }\n\n  render() {\n    return (\n      <div>\n        <link\n          async\n          rel=\"stylesheet\"\n          href=\"//cdn.jsdelivr.net/npm/semantic-ui@^2.4.1/dist/semantic.min.css\"\n        />\n        {this.renderCampaigns()}\n      </div>\n    );\n  }\n}\n\nexport default CampaignIndex;\n"]},"metadata":{},"sourceType":"module"}