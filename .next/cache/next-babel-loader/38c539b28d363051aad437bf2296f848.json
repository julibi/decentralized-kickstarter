{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { Card, Grid, Button } from \"semantic-ui-react\";\nimport factory from \"../../ethereum/factory\";\nimport Layout from \"../../components/Layout\";\nimport ContributeForm from \"../../components/ContributeForm\";\nimport myCampaign from \"../../ethereum/campaign\";\nimport web3 from \"../../ethereum/web3\";\nimport { Link } from \"../../routes\";\n\nvar CampaignShow = /*#__PURE__*/function (_Component) {\n  _inherits(CampaignShow, _Component);\n\n  var _super = _createSuper(CampaignShow);\n\n  function CampaignShow() {\n    _classCallCheck(this, CampaignShow);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(CampaignShow, [{\n    key: \"renderCards\",\n    value: function renderCards() {\n      var _this$props = this.props,\n          minimumContribution = _this$props.minimumContribution,\n          balance = _this$props.balance,\n          requestsCount = _this$props.requestsCount,\n          approversCount = _this$props.approversCount,\n          manager = _this$props.manager;\n      var items = [{\n        header: manager,\n        meta: \"Address of Manager\",\n        description: \"The manager created this campaign and can create requests to withdraw money.\",\n        style: {\n          overflowWrap: \"break-word\"\n        }\n      }, {\n        header: minimumContribution,\n        meta: \"Minimum Contribution (wei)\",\n        description: \"You must contribute at least this much wei to become an approver.\"\n      }, {\n        header: requestsCount,\n        meta: \"Number of Requests\",\n        description: \"A request tries to withdraw money from the contract. A request must be approved by approvers.\"\n      }, {\n        header: approversCount,\n        meta: \"Number of Approvers\",\n        description: \"Number of people who have already donated to this campaign.\"\n      }, {\n        header: web3.utils.fromWei(balance, \"ether\"),\n        meta: \"Campaign Balance (ether)\",\n        description: \"The balance is how much money this campaign has left to spend.\"\n      }];\n      return /*#__PURE__*/_jsx(Card.Group, {\n        items: items\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsxs(Layout, {\n        children: [/*#__PURE__*/_jsx(\"h3\", {\n          children: \"Campaign Show\"\n        }), /*#__PURE__*/_jsxs(Grid, {\n          children: [/*#__PURE__*/_jsx(Grid.Column, {\n            width: 10,\n            children: this.renderCards()\n          }), /*#__PURE__*/_jsx(Grid.Column, {\n            width: 6,\n            children: /*#__PURE__*/_jsx(ContributeForm, {\n              address: this.props.address\n            })\n          })]\n        })]\n      });\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(props) {\n        var campaign, summary;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                campaign = myCampaign(props.query.address);\n                _context.next = 3;\n                return campaign.methods.getSummary().call();\n\n              case 3:\n                summary = _context.sent;\n                console.log(summary);\n                return _context.abrupt(\"return\", {\n                  address: props.query.address,\n                  minimumContribution: summary[0],\n                  balance: summary[1],\n                  requestsCount: summary[2],\n                  approversCount: summary[3],\n                  manager: summary[4]\n                });\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return CampaignShow;\n}(Component);\n\nexport default CampaignShow;","map":{"version":3,"sources":["/Users/hyun-kyungyi/JULI/decentralized-kickstarter/pages/campaigns/show.js"],"names":["React","Component","Card","Grid","Button","factory","Layout","ContributeForm","myCampaign","web3","Link","CampaignShow","props","minimumContribution","balance","requestsCount","approversCount","manager","items","header","meta","description","style","overflowWrap","utils","fromWei","renderCards","address","campaign","query","methods","getSummary","call","summary","console","log"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,MAArB,QAAmC,mBAAnC;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,IAAP,MAAiB,qBAAjB;AACA,SAASC,IAAT,QAAqB,cAArB;;IAEMC,Y;;;;;;;;;;;;;kCAeU;AAAA,wBAOR,KAAKC,KAPG;AAAA,UAEVC,mBAFU,eAEVA,mBAFU;AAAA,UAGVC,OAHU,eAGVA,OAHU;AAAA,UAIVC,aAJU,eAIVA,aAJU;AAAA,UAKVC,cALU,eAKVA,cALU;AAAA,UAMVC,OANU,eAMVA,OANU;AAQZ,UAAMC,KAAK,GAAG,CACZ;AACEC,QAAAA,MAAM,EAAEF,OADV;AAEEG,QAAAA,IAAI,EAAE,oBAFR;AAGEC,QAAAA,WAAW,EACT,8EAJJ;AAKEC,QAAAA,KAAK,EAAE;AAAEC,UAAAA,YAAY,EAAE;AAAhB;AALT,OADY,EAQZ;AACEJ,QAAAA,MAAM,EAAEN,mBADV;AAEEO,QAAAA,IAAI,EAAE,4BAFR;AAGEC,QAAAA,WAAW,EACT;AAJJ,OARY,EAcZ;AACEF,QAAAA,MAAM,EAAEJ,aADV;AAEEK,QAAAA,IAAI,EAAE,oBAFR;AAGEC,QAAAA,WAAW,EACT;AAJJ,OAdY,EAoBZ;AACEF,QAAAA,MAAM,EAAEH,cADV;AAEEI,QAAAA,IAAI,EAAE,qBAFR;AAGEC,QAAAA,WAAW,EACT;AAJJ,OApBY,EA0BZ;AACEF,QAAAA,MAAM,EAAEV,IAAI,CAACe,KAAL,CAAWC,OAAX,CAAmBX,OAAnB,EAA4B,OAA5B,CADV;AAEEM,QAAAA,IAAI,EAAE,0BAFR;AAGEC,QAAAA,WAAW,EACT;AAJJ,OA1BY,CAAd;AAiCA,0BAAO,KAAC,IAAD,CAAM,KAAN;AAAY,QAAA,KAAK,EAAEH;AAAnB,QAAP;AACD;;;6BAEQ;AACP,0BACE,MAAC,MAAD;AAAA,gCACE;AAAA;AAAA,UADF,eAEE,MAAC,IAAD;AAAA,kCACE,KAAC,IAAD,CAAM,MAAN;AAAa,YAAA,KAAK,EAAE,EAApB;AAAA,sBAAyB,KAAKQ,WAAL;AAAzB,YADF,eAEE,KAAC,IAAD,CAAM,MAAN;AAAa,YAAA,KAAK,EAAE,CAApB;AAAA,mCACE,KAAC,cAAD;AAAgB,cAAA,OAAO,EAAE,KAAKd,KAAL,CAAWe;AAApC;AADF,YAFF;AAAA,UAFF;AAAA,QADF;AAWD;;;;uGAtE4Bf,K;;;;;;AACrBgB,gBAAAA,Q,GAAWpB,UAAU,CAACI,KAAK,CAACiB,KAAN,CAAYF,OAAb,C;;uBACLC,QAAQ,CAACE,OAAT,CAAiBC,UAAjB,GAA8BC,IAA9B,E;;;AAAhBC,gBAAAA,O;AACNC,gBAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;iDACO;AACLN,kBAAAA,OAAO,EAAEf,KAAK,CAACiB,KAAN,CAAYF,OADhB;AAELd,kBAAAA,mBAAmB,EAAEoB,OAAO,CAAC,CAAD,CAFvB;AAGLnB,kBAAAA,OAAO,EAAEmB,OAAO,CAAC,CAAD,CAHX;AAILlB,kBAAAA,aAAa,EAAEkB,OAAO,CAAC,CAAD,CAJjB;AAKLjB,kBAAAA,cAAc,EAAEiB,OAAO,CAAC,CAAD,CALlB;AAMLhB,kBAAAA,OAAO,EAAEgB,OAAO,CAAC,CAAD;AANX,iB;;;;;;;;;;;;;;;;;;;EALgBhC,S;;AA0E3B,eAAeU,YAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Card, Grid, Button } from \"semantic-ui-react\";\nimport factory from \"../../ethereum/factory\";\nimport Layout from \"../../components/Layout\";\nimport ContributeForm from \"../../components/ContributeForm\";\nimport myCampaign from \"../../ethereum/campaign\";\nimport web3 from \"../../ethereum/web3\";\nimport { Link } from \"../../routes\";\n\nclass CampaignShow extends Component {\n  static async getInitialProps(props) {\n    const campaign = myCampaign(props.query.address);\n    const summary = await campaign.methods.getSummary().call();\n    console.log(summary);\n    return {\n      address: props.query.address,\n      minimumContribution: summary[0],\n      balance: summary[1],\n      requestsCount: summary[2],\n      approversCount: summary[3],\n      manager: summary[4],\n    };\n  }\n\n  renderCards() {\n    const {\n      minimumContribution,\n      balance,\n      requestsCount,\n      approversCount,\n      manager,\n    } = this.props;\n    const items = [\n      {\n        header: manager,\n        meta: \"Address of Manager\",\n        description:\n          \"The manager created this campaign and can create requests to withdraw money.\",\n        style: { overflowWrap: \"break-word\" },\n      },\n      {\n        header: minimumContribution,\n        meta: \"Minimum Contribution (wei)\",\n        description:\n          \"You must contribute at least this much wei to become an approver.\",\n      },\n      {\n        header: requestsCount,\n        meta: \"Number of Requests\",\n        description:\n          \"A request tries to withdraw money from the contract. A request must be approved by approvers.\",\n      },\n      {\n        header: approversCount,\n        meta: \"Number of Approvers\",\n        description:\n          \"Number of people who have already donated to this campaign.\",\n      },\n      {\n        header: web3.utils.fromWei(balance, \"ether\"),\n        meta: \"Campaign Balance (ether)\",\n        description:\n          \"The balance is how much money this campaign has left to spend.\",\n      },\n    ];\n    return <Card.Group items={items} />;\n  }\n\n  render() {\n    return (\n      <Layout>\n        <h3>Campaign Show</h3>\n        <Grid>\n          <Grid.Column width={10}>{this.renderCards()}</Grid.Column>\n          <Grid.Column width={6}>\n            <ContributeForm address={this.props.address} />\n          </Grid.Column>\n        </Grid>\n      </Layout>\n    );\n  }\n}\n\nexport default CampaignShow;\n"]},"metadata":{},"sourceType":"module"}