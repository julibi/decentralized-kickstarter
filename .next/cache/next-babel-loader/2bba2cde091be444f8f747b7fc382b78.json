{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { Component } from 'react';\nimport { Card } from 'semantic-ui-react';\nimport factory from \"../../ethereum/factory\";\nimport Layout from '../../components/Layout';\nimport myCampaign from '../../ethereum/campaign';\nimport web3 from '../../ethereum/web3';\n\nclass CampaignShow extends Component {\n  static async getInitialProps(props) {\n    const campaign = myCampaign(props.query.address);\n    const summary = await campaign.methods.getSummary().call();\n    console.log(summary);\n    return {\n      minimumContribution: summary[0],\n      balance: summary[1],\n      requestsCount: summary[2],\n      approversCount: summary[3],\n      manager: summary[4]\n    };\n  }\n\n  renderCards() {\n    const {\n      minimumContribution,\n      balance,\n      requestsCount,\n      approversCount,\n      manager\n    } = this.props;\n    const items = [{\n      header: manager,\n      meta: 'Address of Manager',\n      description: 'The manager created this campaign and can create requests to withdraw money.',\n      style: {\n        overflowWrap: 'break-word'\n      }\n    }, {\n      header: minimumContribution,\n      meta: 'Minimum Contribution (wei)',\n      description: 'You must contribute at least this much wei to become an approver.'\n    }, {\n      header: requestsCount,\n      meta: 'Number of Requests',\n      description: 'A request tries to withdraw money from the contract. A request must be approved by approvers.'\n    }, {\n      header: approversCount,\n      meta: 'Number of Approvers',\n      description: 'Number of people who have already donated to this campaign.'\n    }, {\n      header: web3.utils.fromWei(balance, 'ether'),\n      meta: 'Campaign Balance (ether)',\n      description: 'The balance is how much money this campaign has left to spend.'\n    }];\n    return /*#__PURE__*/_jsx(Card.Group, {\n      items: items\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxs(Layout, {\n      children: [/*#__PURE__*/_jsx(\"h3\", {\n        children: \"Campaign Show\"\n      }), this.renderCards()]\n    });\n  }\n\n}\n\nexport default CampaignShow;","map":{"version":3,"sources":["/Users/hyun-kyungyi/JULI/decentralized-kickstarter/pages/campaigns/show.js"],"names":["React","Component","Card","factory","Layout","myCampaign","web3","CampaignShow","getInitialProps","props","campaign","query","address","summary","methods","getSummary","call","console","log","minimumContribution","balance","requestsCount","approversCount","manager","renderCards","items","header","meta","description","style","overflowWrap","utils","fromWei","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,IAAP,MAAiB,qBAAjB;;AAEA,MAAMC,YAAN,SAA2BN,SAA3B,CAAqC;AACnC,eAAaO,eAAb,CAA6BC,KAA7B,EAAoC;AAClC,UAAMC,QAAQ,GAAGL,UAAU,CAACI,KAAK,CAACE,KAAN,CAAYC,OAAb,CAA3B;AACA,UAAMC,OAAO,GAAG,MAAMH,QAAQ,CAACI,OAAT,CAAiBC,UAAjB,GAA8BC,IAA9B,EAAtB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,OAAZ;AACA,WAAO;AACLM,MAAAA,mBAAmB,EAAEN,OAAO,CAAC,CAAD,CADvB;AAELO,MAAAA,OAAO,EAAEP,OAAO,CAAC,CAAD,CAFX;AAGLQ,MAAAA,aAAa,EAAER,OAAO,CAAC,CAAD,CAHjB;AAILS,MAAAA,cAAc,EAAET,OAAO,CAAC,CAAD,CAJlB;AAKLU,MAAAA,OAAO,EAAEV,OAAO,CAAC,CAAD;AALX,KAAP;AAOD;;AAEDW,EAAAA,WAAW,GAAG;AACZ,UAAM;AACJL,MAAAA,mBADI;AAEJC,MAAAA,OAFI;AAGJC,MAAAA,aAHI;AAIJC,MAAAA,cAJI;AAKJC,MAAAA;AALI,QAMF,KAAKd,KANT;AAOA,UAAMgB,KAAK,GAAG,CACZ;AACEC,MAAAA,MAAM,EAAEH,OADV;AAEEI,MAAAA,IAAI,EAAE,oBAFR;AAGEC,MAAAA,WAAW,EAAE,8EAHf;AAIEC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,YAAY,EAAE;AAAhB;AAJT,KADY,EAOZ;AACEJ,MAAAA,MAAM,EAAEP,mBADV;AAEEQ,MAAAA,IAAI,EAAE,4BAFR;AAGEC,MAAAA,WAAW,EAAE;AAHf,KAPY,EAYZ;AACEF,MAAAA,MAAM,EAAEL,aADV;AAEEM,MAAAA,IAAI,EAAE,oBAFR;AAGEC,MAAAA,WAAW,EAAE;AAHf,KAZY,EAiBZ;AACEF,MAAAA,MAAM,EAAEJ,cADV;AAEEK,MAAAA,IAAI,EAAE,qBAFR;AAGEC,MAAAA,WAAW,EAAE;AAHf,KAjBY,EAsBZ;AACEF,MAAAA,MAAM,EAAEpB,IAAI,CAACyB,KAAL,CAAWC,OAAX,CAAmBZ,OAAnB,EAA4B,OAA5B,CADV;AAEEO,MAAAA,IAAI,EAAE,0BAFR;AAGEC,MAAAA,WAAW,EAAE;AAHf,KAtBY,CAAd;AA4BA,wBAAO,KAAC,IAAD,CAAM,KAAN;AAAY,MAAA,KAAK,EAAEH;AAAnB,MAAP;AACD;;AAEDQ,EAAAA,MAAM,GAAG;AACP,wBACE,MAAC,MAAD;AAAA,8BACE;AAAA;AAAA,QADF,EAEG,KAAKT,WAAL,EAFH;AAAA,MADF;AAMD;;AA5DkC;;AA+DrC,eAAejB,YAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Card } from 'semantic-ui-react'\nimport factory from \"../../ethereum/factory\";\nimport Layout from '../../components/Layout';\nimport myCampaign from '../../ethereum/campaign';\nimport web3 from '../../ethereum/web3';\n\nclass CampaignShow extends Component {\n  static async getInitialProps(props) {\n    const campaign = myCampaign(props.query.address);\n    const summary = await campaign.methods.getSummary().call();\n    console.log(summary);\n    return {\n      minimumContribution: summary[0],\n      balance: summary[1],\n      requestsCount: summary[2],\n      approversCount: summary[3],\n      manager: summary[4]\n    };\n  }\n\n  renderCards() {\n    const {\n      minimumContribution,\n      balance,\n      requestsCount,\n      approversCount,\n      manager\n    } = this.props;\n    const items = [\n      {\n        header: manager,\n        meta: 'Address of Manager',\n        description: 'The manager created this campaign and can create requests to withdraw money.',\n        style: { overflowWrap: 'break-word' }\n      },\n      {\n        header: minimumContribution,\n        meta: 'Minimum Contribution (wei)',\n        description: 'You must contribute at least this much wei to become an approver.'\n      },\n      {\n        header: requestsCount,\n        meta: 'Number of Requests',\n        description: 'A request tries to withdraw money from the contract. A request must be approved by approvers.'\n      },\n      {\n        header: approversCount,\n        meta: 'Number of Approvers',\n        description: 'Number of people who have already donated to this campaign.'\n      },\n      {\n        header: web3.utils.fromWei(balance, 'ether'),\n        meta: 'Campaign Balance (ether)',\n        description: 'The balance is how much money this campaign has left to spend.'\n      }\n    ]\n    return <Card.Group items={items} />;\n  }\n\n  render() {\n    return(\n      <Layout>\n        <h3>Campaign Show</h3>\n        {this.renderCards()}\n      </Layout>\n    );\n  }\n}\n\nexport default CampaignShow;"]},"metadata":{},"sourceType":"module"}