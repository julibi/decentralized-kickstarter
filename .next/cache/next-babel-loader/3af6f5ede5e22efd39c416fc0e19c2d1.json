{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport { Form, Button, Input, Message } from \"semantic-ui-react\";\nimport factory from \"../ethereum/factory\";\nimport web3 from \"../ethereum/web3\";\nimport Campaign from \"../ethereum/campaign\";\nimport { Router } from \"../routes\";\n\nclass ContributeForm extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      value: \"\",\n      errorMessage: \"\",\n      loading: true\n    });\n\n    _defineProperty(this, \"onSubmit\", async event => {\n      event.preventDefault();\n      const campaign = Campaign(this.props.address);\n\n      try {\n        const accounts = await web3.eth.getAccounts();\n        await campaign.methods.contribute().send({\n          from: accounts[0],\n          value: web3.utils.toWei(this.state.value, \"ether\")\n        }); // not routerpush, because we don't wanna change the router history\n\n        Router.replaceRoute(`/campaigns/${this.props.address}`);\n      } catch (err) {}\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsx(Form, {\n      onSubmit: this.onSubmit,\n      children: /*#__PURE__*/_jsxs(Form.Field, {\n        children: [/*#__PURE__*/_jsx(\"label\", {\n          children: \"Amount to Contribute\"\n        }), /*#__PURE__*/_jsx(Input, {\n          label: \"ether\",\n          labelPosition: \"right\",\n          value: this.state.value,\n          onChange: event => this.setState({\n            value: event.target.value\n          })\n        }), /*#__PURE__*/_jsx(Button, {\n          primary: true,\n          style: {\n            marginTop: \"10px\"\n          },\n          children: \"Contribute\"\n        })]\n      })\n    });\n  }\n\n}\n\nexport default ContributeForm;","map":{"version":3,"sources":["/Users/hyun-kyungyi/JULI/decentralized-kickstarter/components/ContributeForm.js"],"names":["React","Component","Form","Button","Input","Message","factory","web3","Campaign","Router","ContributeForm","value","errorMessage","loading","event","preventDefault","campaign","props","address","accounts","eth","getAccounts","methods","contribute","send","from","utils","toWei","state","replaceRoute","err","render","onSubmit","setState","target","marginTop"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,KAAvB,EAA8BC,OAA9B,QAA6C,mBAA7C;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,SAASC,MAAT,QAAuB,WAAvB;;AAEA,MAAMC,cAAN,SAA6BT,SAA7B,CAAuC;AAAA;AAAA;;AAAA,mCAC7B;AACNU,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,YAAY,EAAE,EAFR;AAGNC,MAAAA,OAAO,EAAE;AAHH,KAD6B;;AAAA,sCAO1B,MAAOC,KAAP,IAAiB;AAC1BA,MAAAA,KAAK,CAACC,cAAN;AACA,YAAMC,QAAQ,GAAGR,QAAQ,CAAC,KAAKS,KAAL,CAAWC,OAAZ,CAAzB;;AAEA,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAMZ,IAAI,CAACa,GAAL,CAASC,WAAT,EAAvB;AACA,cAAML,QAAQ,CAACM,OAAT,CAAiBC,UAAjB,GAA8BC,IAA9B,CAAmC;AACvCC,UAAAA,IAAI,EAAEN,QAAQ,CAAC,CAAD,CADyB;AAEvCR,UAAAA,KAAK,EAAEJ,IAAI,CAACmB,KAAL,CAAWC,KAAX,CAAiB,KAAKC,KAAL,CAAWjB,KAA5B,EAAmC,OAAnC;AAFgC,SAAnC,CAAN,CAFE,CAMF;;AACAF,QAAAA,MAAM,CAACoB,YAAP,CAAqB,cAAa,KAAKZ,KAAL,CAAWC,OAAQ,EAArD;AACD,OARD,CAQE,OAAOY,GAAP,EAAY,CAAE;AACjB,KApBoC;AAAA;;AAsBrCC,EAAAA,MAAM,GAAG;AACP,wBACE,KAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKC,QAArB;AAAA,6BACE,MAAC,IAAD,CAAM,KAAN;AAAA,gCACE;AAAA;AAAA,UADF,eAEE,KAAC,KAAD;AACE,UAAA,KAAK,EAAC,OADR;AAEE,UAAA,aAAa,EAAC,OAFhB;AAGE,UAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWjB,KAHpB;AAIE,UAAA,QAAQ,EAAGG,KAAD,IAAW,KAAKmB,QAAL,CAAc;AAAEtB,YAAAA,KAAK,EAAEG,KAAK,CAACoB,MAAN,CAAavB;AAAtB,WAAd;AAJvB,UAFF,eAQE,KAAC,MAAD;AAAQ,UAAA,OAAO,MAAf;AAAgB,UAAA,KAAK,EAAE;AAAEwB,YAAAA,SAAS,EAAE;AAAb,WAAvB;AAAA;AAAA,UARF;AAAA;AADF,MADF;AAgBD;;AAvCoC;;AA0CvC,eAAezB,cAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Form, Button, Input, Message } from \"semantic-ui-react\";\nimport factory from \"../ethereum/factory\";\nimport web3 from \"../ethereum/web3\";\nimport Campaign from \"../ethereum/campaign\";\nimport { Router } from \"../routes\";\n\nclass ContributeForm extends Component {\n  state = {\n    value: \"\",\n    errorMessage: \"\",\n    loading: true,\n  };\n\n  onSubmit = async (event) => {\n    event.preventDefault();\n    const campaign = Campaign(this.props.address);\n\n    try {\n      const accounts = await web3.eth.getAccounts();\n      await campaign.methods.contribute().send({\n        from: accounts[0],\n        value: web3.utils.toWei(this.state.value, \"ether\"),\n      });\n      // not routerpush, because we don't wanna change the router history\n      Router.replaceRoute(`/campaigns/${this.props.address}`);\n    } catch (err) {}\n  };\n\n  render() {\n    return (\n      <Form onSubmit={this.onSubmit}>\n        <Form.Field>\n          <label>Amount to Contribute</label>\n          <Input\n            label=\"ether\"\n            labelPosition=\"right\"\n            value={this.state.value}\n            onChange={(event) => this.setState({ value: event.target.value })}\n          />\n          <Button primary style={{ marginTop: \"10px\" }}>\n            Contribute\n          </Button>\n        </Form.Field>\n      </Form>\n    );\n  }\n}\n\nexport default ContributeForm;\n"]},"metadata":{},"sourceType":"module"}